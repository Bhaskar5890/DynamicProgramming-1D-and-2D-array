public static int unboundedKnapsack(int k, List<int> arr)
    {
        var matrix = new int[arr.Count + 1][];
        for(int i = 0; i < matrix.Length; i++)
        {
            matrix[i] = new int[k+1];
        }
        
        //Initialization
        for(int i = 0; i < matrix.Length; i++)
        {
            matrix[i][0] = 0;
            matrix[0][i] = 0;
        }
        
        //Knapsack logic
        for(int i = 1; i < matrix.Length; i++)
        {
            for(int j = 1; j < matrix[i].Length; j++)
            {
                if(arr[i-1] <= j)
                {
                    matrix[i][j] = Math.Max(arr[i - 1] + matrix[i][j - arr[i - 1]], matrix[i - 1][j]);
                }
                else
                {
                    matrix[i][j] = matrix[i-1][j];
                }
            }
        }
        
        return matrix[arr.Count][k];
    }