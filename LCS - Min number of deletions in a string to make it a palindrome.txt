public class Solution {
    public int MinInsertions(string s) 
    {
        var reverse = "";
        for(int i = s.Length-1; i>= 0; i--)
        {
            reverse += s[i];
        }
        return s.Length - LCS(s, reverse);
    }
    
    public int LCS(string s1, string s2)
    {
        var m = s1.Length;
        var n = s2.Length;
        
        var matrix = new int[m+1][];
        for(int i = 0; i < matrix.Length ; i++)
        {
            matrix[i] = new int[n+1];
        }
        
        //Initialization
        for(int i = 0; i < matrix.Length; i++)
        {
            matrix[i][0] = 0;
        }
        for(int i = 0; i < matrix[0].Length; i++)
        {
            matrix[0][i] = 0;
        }
        
        //Choice diagram
        for(int i = 1; i < matrix.Length; i++)
        {
            for(int j = 1; j < matrix[i].Length; j++)
            {
                if(s1[i-1] == s2[j-1])
                {
                    matrix[i][j] = 1 + matrix[i-1][j-1];
                }
                else
                {
                    matrix[i][j] = Math.Max(matrix[i-1][j], matrix[i][j-1]);
                }
            }
        }
        
        return matrix[m][n];
    }
}