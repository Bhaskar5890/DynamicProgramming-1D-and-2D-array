public class Solution {
    public bool PredictTheWinner(int[] nums)
    {
        var grid = new int[nums.Length][];
        for(int i = 0; i < nums.Length; i++)
        {
            grid[i] = new int[nums.Length];
            Array.Fill(grid[i], -1);
        }
        
        var total = 0;
        for(int i = 0; i < nums.Length; i++)
        {
            total += nums[i];
        }
        
        var firstPlayerSum = Recurse(nums, 0, nums.Length-1, ref grid);
        return firstPlayerSum >= (total - firstPlayerSum);
    }
    
    public int Recurse(int[] nums, int start, int end, ref int[][] grid)
    {
        if(start == end)
        {
            return nums[start];
        }
        if(start > end)
        {
            return 0;
        }
        
        if(grid[start][end] != -1)
        {
            return grid[start][end];
        }
        
        var left = nums[start] + Math.Min(Recurse(nums, start+2, end, ref grid), Recurse(nums, start+1, end-1, ref grid));
        var right = nums[end] + Math.Min(Recurse(nums, start, end-2, ref grid), Recurse(nums, start+1, end-1, ref grid));
        
        return grid[start][end] = Math.Max(left, right);
    }
}