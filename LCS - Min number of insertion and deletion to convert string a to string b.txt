public class Solution {
    public int MinDistance(string word1, string word2) 
    {
        var m = word1.Length;
        var n = word2.Length;
        
        var lcs = LCS(word1, word2);
        
        return (m - lcs) + (n - lcs);
    }
    
    public int LCS(string word1, string word2)
    {
        var m = word1.Length;
        var n = word2.Length;
        
        var matrix = new int[m+1][];
        for(int i = 0; i < matrix.Length; i++)
        {
            matrix[i] = new int[n+1];
        }
        
        //Initialization
        for(int i = 0; i < matrix.Length; i++)
        {
            matrix[i][0] = 0;
        }
        for(int i = 0; i < matrix[0].Length; i++)
        {
            matrix[0][i] = 0;
        }
        
        //Choice diagram
        for(int i = 1; i < matrix.Length; i++)
        {
            for(int j = 1; j < matrix[i].Length; j++)
            {
                if(word1[i-1] == word2[j-1])
                {
                    matrix[i][j] = 1 + matrix[i-1][j-1];
                }
                else
                {
                    matrix[i][j] = Math.Max(matrix[i-1][j], matrix[i][j-1]);
                }
            }
        }
        
        return matrix[m][n];
    }
}