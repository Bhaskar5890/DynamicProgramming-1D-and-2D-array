public class Solution {
    public int NumSquares(int n) 
    {
        var list = new List<int>();
        
        //Create perfect squares array
        for(int i = 1; i * i <= n; i++)
        {
            list.Add(i*i);
        }
        
        var dp = new int[n+1];
        Array.Fill(dp, n+1);
        dp[0] = 0;
        
        //Go through bottom up approach to find squares needed for all numbers from 1 to n
        for(int i = 1; i < dp.Length; i++)
        {
            foreach(var item in list)
            {
                if((i - item) >= 0)
                {
                    dp[i] = Math.Min(dp[i], 1 + dp[i - item]);
                }
            }
        }
        
        return (dp[n] != n+1) ? dp[n] : -1;
    }
}